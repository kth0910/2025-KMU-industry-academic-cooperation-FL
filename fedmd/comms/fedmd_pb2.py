# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: fedmd.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'fedmd.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0b\x66\x65\x64md.proto\x12\x05\x66\x65\x64md\"p\n\x0b\x43lientHello\x12\x11\n\tclient_id\x18\x01 \x01(\t\x12\x12\n\nmodel_name\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\t\x12\x13\n\x0bnum_classes\x18\x04 \x01(\x05\x12\x14\n\x0c\x63\x61pabilities\x18\x05 \x03(\t\"\xb1\x01\n\x0bServerHello\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x10\n\x08round_id\x18\x03 \x01(\x05\x12\x16\n\x0epublic_indices\x18\x04 \x03(\x05\x12\x13\n\x0btemperature\x18\x05 \x01(\x02\x12\r\n\x05\x61lpha\x18\x06 \x01(\x02\x12\x13\n\x0btimeout_sec\x18\x07 \x01(\x05\x12\x1d\n\x15required_capabilities\x18\x08 \x03(\t\"U\n\x08LogitRow\x12\x12\n\nglobal_idx\x18\x01 \x01(\x05\x12\x0e\n\x06logits\x18\x02 \x03(\x02\x12\x12\n\nconfidence\x18\x03 \x01(\x02\x12\x11\n\ttimestamp\x18\x04 \x01(\x03\"|\n\x0bLogitsBatch\x12\x11\n\tclient_id\x18\x01 \x01(\t\x12\x10\n\x08round_id\x18\x02 \x01(\x05\x12\x1d\n\x04rows\x18\x03 \x03(\x0b\x32\x0f.fedmd.LogitRow\x12\x17\n\x0f\x62\x61tch_timestamp\x18\x04 \x01(\x03\x12\x10\n\x08\x63hecksum\x18\x05 \x01(\t\"P\n\x07ProbRow\x12\x12\n\nglobal_idx\x18\x01 \x01(\x05\x12\r\n\x05probs\x18\x02 \x03(\x02\x12\x0f\n\x07\x65ntropy\x18\x03 \x01(\x02\x12\x11\n\ttimestamp\x18\x04 \x01(\x03\"\x82\x01\n\x10SoftTargetsBatch\x12\x10\n\x08round_id\x18\x01 \x01(\x05\x12\x1c\n\x04rows\x18\x02 \x03(\x0b\x32\x0e.fedmd.ProbRow\x12\x17\n\x0f\x62\x61tch_timestamp\x18\x03 \x01(\x03\x12\x10\n\x08\x63hecksum\x18\x04 \x01(\t\x12\x13\n\x0bnum_clients\x18\x05 \x01(\x05\"1\n\nRoundQuery\x12\x10\n\x08round_id\x18\x01 \x01(\x05\x12\x11\n\tclient_id\x18\x02 \x01(\t\"F\n\x06Metric\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01\x12\x0c\n\x04unit\x18\x03 \x01(\t\x12\x11\n\ttimestamp\x18\x04 \x01(\x03\"n\n\rMetricsReport\x12\x11\n\tclient_id\x18\x01 \x01(\t\x12\x10\n\x08round_id\x18\x02 \x01(\x05\x12\x1e\n\x07metrics\x18\x03 \x03(\x0b\x32\r.fedmd.Metric\x12\x18\n\x10report_timestamp\x18\x04 \x01(\x03\"\xd0\x01\n\x0bRoundStatus\x12\x10\n\x08round_id\x18\x01 \x01(\x05\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x1e\n\x16num_clients_registered\x18\x03 \x01(\x05\x12\x1b\n\x13num_logits_received\x18\x04 \x01(\x05\x12\x18\n\x10\x65xpected_clients\x18\x05 \x01(\x05\x12\x12\n\nstart_time\x18\x06 \x01(\x03\x12\x18\n\x10last_update_time\x18\x07 \x01(\x03\x12\x1a\n\x12registered_clients\x18\x08 \x03(\t\"\x07\n\x05\x45mpty\"\x85\x01\n\x0cHealthStatus\x12\x0f\n\x07healthy\x18\x01 \x01(\x08\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\x03\x12\x0f\n\x07version\x18\x04 \x01(\t\x12\x15\n\ractive_rounds\x18\x05 \x01(\x05\x12\x19\n\x11\x63onnected_clients\x18\x06 \x01(\x05\"\x97\x01\n\x03\x41\x63k\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x11\n\ttimestamp\x18\x03 \x01(\x03\x12*\n\x08metadata\x18\x04 \x03(\x0b\x32\x18.fedmd.Ack.MetadataEntry\x1a/\n\rMetadataEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x32\xc7\x02\n\x05\x46\x65\x64MD\x12\x32\n\x08Register\x12\x12.fedmd.ClientHello\x1a\x12.fedmd.ServerHello\x12.\n\x0cUploadLogits\x12\x12.fedmd.LogitsBatch\x1a\n.fedmd.Ack\x12<\n\x0eGetSoftTargets\x12\x11.fedmd.RoundQuery\x1a\x17.fedmd.SoftTargetsBatch\x12\x31\n\rReportMetrics\x12\x14.fedmd.MetricsReport\x1a\n.fedmd.Ack\x12\x37\n\x0eGetRoundStatus\x12\x11.fedmd.RoundQuery\x1a\x12.fedmd.RoundStatus\x12\x30\n\x0bHealthCheck\x12\x0c.fedmd.Empty\x1a\x13.fedmd.HealthStatusb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'fedmd_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_ACK_METADATAENTRY']._loaded_options = None
  _globals['_ACK_METADATAENTRY']._serialized_options = b'8\001'
  _globals['_CLIENTHELLO']._serialized_start=22
  _globals['_CLIENTHELLO']._serialized_end=134
  _globals['_SERVERHELLO']._serialized_start=137
  _globals['_SERVERHELLO']._serialized_end=314
  _globals['_LOGITROW']._serialized_start=316
  _globals['_LOGITROW']._serialized_end=401
  _globals['_LOGITSBATCH']._serialized_start=403
  _globals['_LOGITSBATCH']._serialized_end=527
  _globals['_PROBROW']._serialized_start=529
  _globals['_PROBROW']._serialized_end=609
  _globals['_SOFTTARGETSBATCH']._serialized_start=612
  _globals['_SOFTTARGETSBATCH']._serialized_end=742
  _globals['_ROUNDQUERY']._serialized_start=744
  _globals['_ROUNDQUERY']._serialized_end=793
  _globals['_METRIC']._serialized_start=795
  _globals['_METRIC']._serialized_end=865
  _globals['_METRICSREPORT']._serialized_start=867
  _globals['_METRICSREPORT']._serialized_end=977
  _globals['_ROUNDSTATUS']._serialized_start=980
  _globals['_ROUNDSTATUS']._serialized_end=1188
  _globals['_EMPTY']._serialized_start=1190
  _globals['_EMPTY']._serialized_end=1197
  _globals['_HEALTHSTATUS']._serialized_start=1200
  _globals['_HEALTHSTATUS']._serialized_end=1333
  _globals['_ACK']._serialized_start=1336
  _globals['_ACK']._serialized_end=1487
  _globals['_ACK_METADATAENTRY']._serialized_start=1440
  _globals['_ACK_METADATAENTRY']._serialized_end=1487
  _globals['_FEDMD']._serialized_start=1490
  _globals['_FEDMD']._serialized_end=1817
# @@protoc_insertion_point(module_scope)
